<%- include('head') -%>

<body>
<div class="container">
    <h1 class="text-center my-4">Geolocalização</h1>
    
    <div class="row">
        <div class="col-md-6">
            <p class="font-weight-bold">Latitude: <span id="latitude"></span></p>
        </div>
        <div class="col-md-6">
            <p class="font-weight-bold">Longitude: <span id="longitude"></span></p>
        </div>
    </div>
    <!-- <button class="btn-custom btn-active" onclick="toggleButton()">Parar Atualização</button> -->
    <br>
    <div id="map" style="height: 400px;"></div>
</div>
</body>

<script>
    /*
    // Create WebSocket connection.
    const socket = new WebSocket("ws://localhost:5000/location/{{ client_id }}");

    // Connection opened
    socket.addEventListener("open", (event) => {
        socket.send("Hello Server!");
    });

    // Listen for messages
    socket.addEventListener("message", (event) => {
        console.log("Message from server ", event.data);
    });

    document.addEventListener('DOMContentLoaded', (event) => {
        initGetLocation();
   });
   */

   document.addEventListener('DOMContentLoaded', (event) => {
        initGetLocation();
   });

    // interval
    let isUpdating = false;
    let intervalId;

    // map
    let map;
    let markerGroup = L.layerGroup();

    function getLocation() {
        let apiUrl = `/location/<%= client_id %>`;

        fetch(apiUrl)
            .then(response => response.json())
            .then(data => {
                console.log(data)
                if (data && data.latitude && data.longitude) {
                    lat = data.latitude
                    long = data.longitude
                    document.getElementById("latitude").innerText = lat;
                    document.getElementById("longitude").innerText = long;
                    updateMap(lat, long);
                }
            })
            .catch(error => {
                console.error('Erro na solicitação da API:', error);
            });
    }

    // Inicia ou para a atualização da localização
    function initGetLocation() {
        if(!isUpdating) {
            getLocation(); 
            intervalId = setInterval(getLocation, 1000);
            isUpdating = true;
        } else {
            clearInterval(intervalId);
            isUpdating = false;
        }
    }

    // Alterna o botão entre ativo e inativo
    function toggleButton() {
        var button = document.querySelector('.btn-custom');
        button.classList.toggle('btn-active');
        button.classList.toggle('btn-inactive');
        
        if(button.classList.contains('btn-active')) {
            button.innerText = 'Parar Atualização';
            initGetLocation();
        } else {
            button.innerText = 'Iniciar Atualização';
            initGetLocation();
        }
    }

    function updateMap(latitude, longitude) {
        // Cria o mapa se ainda não existir
        if (!map) {
            map = L.map('map').setView([latitude, longitude], 13);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);
        }

        // Remove todas as camadas do grupo de camadas
        markerGroup.clearLayers();

        // Adiciona um marcador para a nova localização
        var marker = L.marker([latitude, longitude]);
        markerGroup.addLayer(marker);
        markerGroup.addTo(map);
    }
</script>

</html>